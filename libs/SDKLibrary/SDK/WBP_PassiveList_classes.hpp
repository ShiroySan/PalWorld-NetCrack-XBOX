#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PassiveList

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_PassiveList.WBP_PassiveList_C
// 0x0098 (0x0310 - 0x0278)
class UWBP_PassiveList_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image;                                             // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_64;                                          // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           PassiveList;                                       // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           PassiveSkillsList;                                 // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Button_C*                          WBP_Button;                                        // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnSelect;                                          // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class FName>                           SelectedPassives;                                  // 0x02B8(0x0010)(Edit, BlueprintVisible, ExposeOnSpawn)
	TArray<class FName>                           AvailablePassives;                                 // 0x02C8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bIsTooltipVisible;                                 // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B75[0x7];                                     // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             Delegate_OnPassiveHovered;                         // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             Delegate_OnPassiveUnhovered;                       // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnBackAction;                                      // 0x0300(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void SortPassivesByRank(TArray<class FName>& PassiveSkillArray, TArray<class FName>* SortedArray);
	void Setup();
	void RefreshAvailablePassives(TArray<class FName>& Param_SelectedPassives);
	void PreConstruct(bool IsDesignTime);
	void OnSelect__DelegateSignature(class FName ID);
	void OnPassiveUnhovered();
	void OnPassiveSelected(class UWBP_PassiveSkill_C* Button, class FName ID);
	void OnPassiveHovered(class UWBP_PassiveSkill_C* Button, class FName ID);
	void OnBackAction__DelegateSignature();
	void ExecuteUbergraph_WBP_PassiveList(int32 EntryPoint);
	void Delegate_OnPassiveUnhovered__DelegateSignature();
	void Delegate_OnPassiveHovered__DelegateSignature(class FName ID);
	void CreateButton(class FName ID);
	void Construct();
	void Close();
	void BndEvt__WBP_PassiveList_WBP_Button_K2Node_ComponentBoundEvent_0_OnButtonClicked__DelegateSignature();
	void AddMissingPassives();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_PassiveList_C">();
	}
	static class UWBP_PassiveList_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_PassiveList_C>();
	}
};
static_assert(alignof(UWBP_PassiveList_C) == 0x000008, "Wrong alignment on UWBP_PassiveList_C");
static_assert(sizeof(UWBP_PassiveList_C) == 0x000310, "Wrong size on UWBP_PassiveList_C");
static_assert(offsetof(UWBP_PassiveList_C, UberGraphFrame) == 0x000278, "Member 'UWBP_PassiveList_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveList_C, Image) == 0x000280, "Member 'UWBP_PassiveList_C::Image' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveList_C, Image_64) == 0x000288, "Member 'UWBP_PassiveList_C::Image_64' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveList_C, PassiveList) == 0x000290, "Member 'UWBP_PassiveList_C::PassiveList' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveList_C, PassiveSkillsList) == 0x000298, "Member 'UWBP_PassiveList_C::PassiveSkillsList' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveList_C, WBP_Button) == 0x0002A0, "Member 'UWBP_PassiveList_C::WBP_Button' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveList_C, OnSelect) == 0x0002A8, "Member 'UWBP_PassiveList_C::OnSelect' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveList_C, SelectedPassives) == 0x0002B8, "Member 'UWBP_PassiveList_C::SelectedPassives' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveList_C, AvailablePassives) == 0x0002C8, "Member 'UWBP_PassiveList_C::AvailablePassives' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveList_C, bIsTooltipVisible) == 0x0002D8, "Member 'UWBP_PassiveList_C::bIsTooltipVisible' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveList_C, Delegate_OnPassiveHovered) == 0x0002E0, "Member 'UWBP_PassiveList_C::Delegate_OnPassiveHovered' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveList_C, Delegate_OnPassiveUnhovered) == 0x0002F0, "Member 'UWBP_PassiveList_C::Delegate_OnPassiveUnhovered' has a wrong offset!");
static_assert(offsetof(UWBP_PassiveList_C, OnBackAction) == 0x000300, "Member 'UWBP_PassiveList_C::OnBackAction' has a wrong offset!");

}

