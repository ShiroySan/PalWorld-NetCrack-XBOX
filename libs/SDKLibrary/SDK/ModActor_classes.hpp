#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ModActor

#include "Basic.hpp"

#include "Pal_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ModActor.ModActor_C
// 0x0040 (0x02D0 - 0x0290)
class AModActor_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FString                                 ModAuthor;                                         // 0x02A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 ModDescription;                                    // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 ModVersion;                                        // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void PrintToModLoader(const class FString& Message);
	void OnReload();
	void ExecuteUbergraph_ModActor(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ModActor_C">();
	}
	static class AModActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AModActor_C>();
	}
};
static_assert(alignof(AModActor_C) == 0x000008, "Wrong alignment on AModActor_C");
static_assert(sizeof(AModActor_C) == 0x0002D0, "Wrong size on AModActor_C");
static_assert(offsetof(AModActor_C, UberGraphFrame) == 0x000290, "Member 'AModActor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AModActor_C, DefaultSceneRoot) == 0x000298, "Member 'AModActor_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AModActor_C, ModAuthor) == 0x0002A0, "Member 'AModActor_C::ModAuthor' has a wrong offset!");
static_assert(offsetof(AModActor_C, ModDescription) == 0x0002B0, "Member 'AModActor_C::ModDescription' has a wrong offset!");
static_assert(offsetof(AModActor_C, ModVersion) == 0x0002C0, "Member 'AModActor_C::ModVersion' has a wrong offset!");

}

