#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PassiveList

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Pal_structs.hpp"


namespace SDK::Params
{

// Function WBP_PassiveList.WBP_PassiveList_C.SortPassivesByRank
// 0x00F0 (0x00F0 - 0x0000)
struct WBP_PassiveList_C_SortPassivesByRank final
{
public:
	TArray<class FName>                           PassiveSkillArray;                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	TArray<class FName>                           SortedArray;                                       // 0x0010(0x0010)(Parm, OutParm)
	class UPalPassiveSkillManager*                PassiveSkillManager;                               // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentRank;                                       // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B76[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           LocalSortedArray;                                  // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<class FName>                           LocalUnsortedArray;                                // 0x0040(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B77[0x3];                                     // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B78[0x3];                                     // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B79[0x3];                                     // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPalPassiveSkillManager*                CallFunc_GetPassiveSkillManager_ReturnValue;       // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B7A[0x6];                                     // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPalPassiveSkillDatabaseRow            CallFunc_GetSkillData_outSkillData;                // 0x0098(0x0050)()
	bool                                          CallFunc_GetSkillData_ReturnValue;                 // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PassiveList_C_SortPassivesByRank) == 0x000008, "Wrong alignment on WBP_PassiveList_C_SortPassivesByRank");
static_assert(sizeof(WBP_PassiveList_C_SortPassivesByRank) == 0x0000F0, "Wrong size on WBP_PassiveList_C_SortPassivesByRank");
static_assert(offsetof(WBP_PassiveList_C_SortPassivesByRank, PassiveSkillArray) == 0x000000, "Member 'WBP_PassiveList_C_SortPassivesByRank::PassiveSkillArray' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_SortPassivesByRank, SortedArray) == 0x000010, "Member 'WBP_PassiveList_C_SortPassivesByRank::SortedArray' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_SortPassivesByRank, PassiveSkillManager) == 0x000020, "Member 'WBP_PassiveList_C_SortPassivesByRank::PassiveSkillManager' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_SortPassivesByRank, CurrentRank) == 0x000028, "Member 'WBP_PassiveList_C_SortPassivesByRank::CurrentRank' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_SortPassivesByRank, LocalSortedArray) == 0x000030, "Member 'WBP_PassiveList_C_SortPassivesByRank::LocalSortedArray' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_SortPassivesByRank, LocalUnsortedArray) == 0x000040, "Member 'WBP_PassiveList_C_SortPassivesByRank::LocalUnsortedArray' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_SortPassivesByRank, Temp_int_Array_Index_Variable) == 0x000050, "Member 'WBP_PassiveList_C_SortPassivesByRank::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_SortPassivesByRank, Temp_int_Variable) == 0x000054, "Member 'WBP_PassiveList_C_SortPassivesByRank::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_SortPassivesByRank, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'WBP_PassiveList_C_SortPassivesByRank::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_SortPassivesByRank, CallFunc_Array_Length_ReturnValue_1) == 0x00005C, "Member 'WBP_PassiveList_C_SortPassivesByRank::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_SortPassivesByRank, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000060, "Member 'WBP_PassiveList_C_SortPassivesByRank::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_SortPassivesByRank, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'WBP_PassiveList_C_SortPassivesByRank::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_SortPassivesByRank, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000068, "Member 'WBP_PassiveList_C_SortPassivesByRank::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_SortPassivesByRank, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'WBP_PassiveList_C_SortPassivesByRank::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_SortPassivesByRank, CallFunc_BooleanAND_ReturnValue) == 0x000070, "Member 'WBP_PassiveList_C_SortPassivesByRank::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_SortPassivesByRank, CallFunc_Add_IntInt_ReturnValue_1) == 0x000074, "Member 'WBP_PassiveList_C_SortPassivesByRank::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_SortPassivesByRank, CallFunc_GetPassiveSkillManager_ReturnValue) == 0x000078, "Member 'WBP_PassiveList_C_SortPassivesByRank::CallFunc_GetPassiveSkillManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_SortPassivesByRank, CallFunc_Array_Get_Item) == 0x000080, "Member 'WBP_PassiveList_C_SortPassivesByRank::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_SortPassivesByRank, CallFunc_Array_Length_ReturnValue_2) == 0x000088, "Member 'WBP_PassiveList_C_SortPassivesByRank::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_SortPassivesByRank, CallFunc_Array_Add_ReturnValue) == 0x00008C, "Member 'WBP_PassiveList_C_SortPassivesByRank::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_SortPassivesByRank, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'WBP_PassiveList_C_SortPassivesByRank::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_SortPassivesByRank, CallFunc_Array_Contains_ReturnValue) == 0x000091, "Member 'WBP_PassiveList_C_SortPassivesByRank::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_SortPassivesByRank, CallFunc_GetSkillData_outSkillData) == 0x000098, "Member 'WBP_PassiveList_C_SortPassivesByRank::CallFunc_GetSkillData_outSkillData' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_SortPassivesByRank, CallFunc_GetSkillData_ReturnValue) == 0x0000E8, "Member 'WBP_PassiveList_C_SortPassivesByRank::CallFunc_GetSkillData_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_SortPassivesByRank, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000E9, "Member 'WBP_PassiveList_C_SortPassivesByRank::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_PassiveList.WBP_PassiveList_C.Setup
// 0x0048 (0x0048 - 0x0000)
struct WBP_PassiveList_C_Setup final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B7B[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_SortPassivesByRank_SortedArray;           // 0x0010(0x0010)(ReferenceParm)
	class UPalPassiveSkillManager*                CallFunc_GetPassiveSkillManager_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_Map_Keys_Keys;                            // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PassiveList_C_Setup) == 0x000008, "Wrong alignment on WBP_PassiveList_C_Setup");
static_assert(sizeof(WBP_PassiveList_C_Setup) == 0x000048, "Wrong size on WBP_PassiveList_C_Setup");
static_assert(offsetof(WBP_PassiveList_C_Setup, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_PassiveList_C_Setup::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_Setup, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_PassiveList_C_Setup::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_Setup, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_PassiveList_C_Setup::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_Setup, CallFunc_SortPassivesByRank_SortedArray) == 0x000010, "Member 'WBP_PassiveList_C_Setup::CallFunc_SortPassivesByRank_SortedArray' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_Setup, CallFunc_GetPassiveSkillManager_ReturnValue) == 0x000020, "Member 'WBP_PassiveList_C_Setup::CallFunc_GetPassiveSkillManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_Setup, CallFunc_Array_Get_Item) == 0x000028, "Member 'WBP_PassiveList_C_Setup::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_Setup, CallFunc_Map_Keys_Keys) == 0x000030, "Member 'WBP_PassiveList_C_Setup::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_Setup, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'WBP_PassiveList_C_Setup::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_Setup, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'WBP_PassiveList_C_Setup::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WBP_PassiveList.WBP_PassiveList_C.RefreshAvailablePassives
// 0x0058 (0x0058 - 0x0000)
struct WBP_PassiveList_C_RefreshAvailablePassives final
{
public:
	TArray<class FName>                           Param_SelectedPassives;                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B7C[0x4];                                     // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B7D[0x4];                                     // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B7E[0x7];                                     // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_PassiveSkill_C*                    K2Node_DynamicCast_AsWBP_Passive_Skill;            // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PassiveList_C_RefreshAvailablePassives) == 0x000008, "Wrong alignment on WBP_PassiveList_C_RefreshAvailablePassives");
static_assert(sizeof(WBP_PassiveList_C_RefreshAvailablePassives) == 0x000058, "Wrong size on WBP_PassiveList_C_RefreshAvailablePassives");
static_assert(offsetof(WBP_PassiveList_C_RefreshAvailablePassives, Param_SelectedPassives) == 0x000000, "Member 'WBP_PassiveList_C_RefreshAvailablePassives::Param_SelectedPassives' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_RefreshAvailablePassives, Temp_int_Array_Index_Variable) == 0x000010, "Member 'WBP_PassiveList_C_RefreshAvailablePassives::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_RefreshAvailablePassives, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'WBP_PassiveList_C_RefreshAvailablePassives::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_RefreshAvailablePassives, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WBP_PassiveList_C_RefreshAvailablePassives::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_RefreshAvailablePassives, CallFunc_GetAllChildren_ReturnValue) == 0x000020, "Member 'WBP_PassiveList_C_RefreshAvailablePassives::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_RefreshAvailablePassives, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'WBP_PassiveList_C_RefreshAvailablePassives::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_RefreshAvailablePassives, CallFunc_Array_Get_Item) == 0x000038, "Member 'WBP_PassiveList_C_RefreshAvailablePassives::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_RefreshAvailablePassives, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'WBP_PassiveList_C_RefreshAvailablePassives::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_RefreshAvailablePassives, K2Node_DynamicCast_AsWBP_Passive_Skill) == 0x000048, "Member 'WBP_PassiveList_C_RefreshAvailablePassives::K2Node_DynamicCast_AsWBP_Passive_Skill' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_RefreshAvailablePassives, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WBP_PassiveList_C_RefreshAvailablePassives::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_RefreshAvailablePassives, CallFunc_Array_Contains_ReturnValue) == 0x000051, "Member 'WBP_PassiveList_C_RefreshAvailablePassives::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function WBP_PassiveList.WBP_PassiveList_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_PassiveList_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PassiveList_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_PassiveList_C_PreConstruct");
static_assert(sizeof(WBP_PassiveList_C_PreConstruct) == 0x000001, "Wrong size on WBP_PassiveList_C_PreConstruct");
static_assert(offsetof(WBP_PassiveList_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_PassiveList_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_PassiveList.WBP_PassiveList_C.OnSelect__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_PassiveList_C_OnSelect__DelegateSignature final
{
public:
	class FName                                   ID;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PassiveList_C_OnSelect__DelegateSignature) == 0x000004, "Wrong alignment on WBP_PassiveList_C_OnSelect__DelegateSignature");
static_assert(sizeof(WBP_PassiveList_C_OnSelect__DelegateSignature) == 0x000008, "Wrong size on WBP_PassiveList_C_OnSelect__DelegateSignature");
static_assert(offsetof(WBP_PassiveList_C_OnSelect__DelegateSignature, ID) == 0x000000, "Member 'WBP_PassiveList_C_OnSelect__DelegateSignature::ID' has a wrong offset!");

// Function WBP_PassiveList.WBP_PassiveList_C.OnPassiveSelected
// 0x0010 (0x0010 - 0x0000)
struct WBP_PassiveList_C_OnPassiveSelected final
{
public:
	class UWBP_PassiveSkill_C*                    Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   ID;                                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PassiveList_C_OnPassiveSelected) == 0x000008, "Wrong alignment on WBP_PassiveList_C_OnPassiveSelected");
static_assert(sizeof(WBP_PassiveList_C_OnPassiveSelected) == 0x000010, "Wrong size on WBP_PassiveList_C_OnPassiveSelected");
static_assert(offsetof(WBP_PassiveList_C_OnPassiveSelected, Button) == 0x000000, "Member 'WBP_PassiveList_C_OnPassiveSelected::Button' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_OnPassiveSelected, ID) == 0x000008, "Member 'WBP_PassiveList_C_OnPassiveSelected::ID' has a wrong offset!");

// Function WBP_PassiveList.WBP_PassiveList_C.OnPassiveHovered
// 0x0010 (0x0010 - 0x0000)
struct WBP_PassiveList_C_OnPassiveHovered final
{
public:
	class UWBP_PassiveSkill_C*                    Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   ID;                                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PassiveList_C_OnPassiveHovered) == 0x000008, "Wrong alignment on WBP_PassiveList_C_OnPassiveHovered");
static_assert(sizeof(WBP_PassiveList_C_OnPassiveHovered) == 0x000010, "Wrong size on WBP_PassiveList_C_OnPassiveHovered");
static_assert(offsetof(WBP_PassiveList_C_OnPassiveHovered, Button) == 0x000000, "Member 'WBP_PassiveList_C_OnPassiveHovered::Button' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_OnPassiveHovered, ID) == 0x000008, "Member 'WBP_PassiveList_C_OnPassiveHovered::ID' has a wrong offset!");

// Function WBP_PassiveList.WBP_PassiveList_C.ExecuteUbergraph_WBP_PassiveList
// 0x0008 (0x0008 - 0x0000)
struct WBP_PassiveList_C_ExecuteUbergraph_WBP_PassiveList final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PassiveList_C_ExecuteUbergraph_WBP_PassiveList) == 0x000004, "Wrong alignment on WBP_PassiveList_C_ExecuteUbergraph_WBP_PassiveList");
static_assert(sizeof(WBP_PassiveList_C_ExecuteUbergraph_WBP_PassiveList) == 0x000008, "Wrong size on WBP_PassiveList_C_ExecuteUbergraph_WBP_PassiveList");
static_assert(offsetof(WBP_PassiveList_C_ExecuteUbergraph_WBP_PassiveList, EntryPoint) == 0x000000, "Member 'WBP_PassiveList_C_ExecuteUbergraph_WBP_PassiveList::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_ExecuteUbergraph_WBP_PassiveList, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_PassiveList_C_ExecuteUbergraph_WBP_PassiveList::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WBP_PassiveList.WBP_PassiveList_C.Delegate_OnPassiveHovered__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_PassiveList_C_Delegate_OnPassiveHovered__DelegateSignature final
{
public:
	class FName                                   ID;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PassiveList_C_Delegate_OnPassiveHovered__DelegateSignature) == 0x000004, "Wrong alignment on WBP_PassiveList_C_Delegate_OnPassiveHovered__DelegateSignature");
static_assert(sizeof(WBP_PassiveList_C_Delegate_OnPassiveHovered__DelegateSignature) == 0x000008, "Wrong size on WBP_PassiveList_C_Delegate_OnPassiveHovered__DelegateSignature");
static_assert(offsetof(WBP_PassiveList_C_Delegate_OnPassiveHovered__DelegateSignature, ID) == 0x000000, "Member 'WBP_PassiveList_C_Delegate_OnPassiveHovered__DelegateSignature::ID' has a wrong offset!");

// Function WBP_PassiveList.WBP_PassiveList_C.CreateButton
// 0x0058 (0x0058 - 0x0000)
struct WBP_PassiveList_C_CreateButton final
{
public:
	class FName                                   ID;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_PassiveSkill_C* Button, class FName ID)> K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UWBP_PassiveSkill_C* Button, class FName ID)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_PassiveSkill_C*                    CallFunc_Create_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PassiveList_C_CreateButton) == 0x000008, "Wrong alignment on WBP_PassiveList_C_CreateButton");
static_assert(sizeof(WBP_PassiveList_C_CreateButton) == 0x000058, "Wrong size on WBP_PassiveList_C_CreateButton");
static_assert(offsetof(WBP_PassiveList_C_CreateButton, ID) == 0x000000, "Member 'WBP_PassiveList_C_CreateButton::ID' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_CreateButton, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WBP_PassiveList_C_CreateButton::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_CreateButton, K2Node_CreateDelegate_OutputDelegate_1) == 0x000018, "Member 'WBP_PassiveList_C_CreateButton::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_CreateButton, K2Node_CreateDelegate_OutputDelegate_2) == 0x000028, "Member 'WBP_PassiveList_C_CreateButton::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_CreateButton, CallFunc_Create_ReturnValue) == 0x000038, "Member 'WBP_PassiveList_C_CreateButton::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_CreateButton, K2Node_MakeStruct_Margin) == 0x000040, "Member 'WBP_PassiveList_C_CreateButton::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_CreateButton, CallFunc_AddChild_ReturnValue) == 0x000050, "Member 'WBP_PassiveList_C_CreateButton::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function WBP_PassiveList.WBP_PassiveList_C.AddMissingPassives
// 0x0038 (0x0038 - 0x0000)
struct WBP_PassiveList_C_AddMissingPassives final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B7F[0x4];                                     // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_PassiveList_C_AddMissingPassives) == 0x000008, "Wrong alignment on WBP_PassiveList_C_AddMissingPassives");
static_assert(sizeof(WBP_PassiveList_C_AddMissingPassives) == 0x000038, "Wrong size on WBP_PassiveList_C_AddMissingPassives");
static_assert(offsetof(WBP_PassiveList_C_AddMissingPassives, Temp_int_Array_Index_Variable) == 0x000000, "Member 'WBP_PassiveList_C_AddMissingPassives::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_AddMissingPassives, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'WBP_PassiveList_C_AddMissingPassives::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_AddMissingPassives, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WBP_PassiveList_C_AddMissingPassives::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_AddMissingPassives, K2Node_MakeArray_Array) == 0x000010, "Member 'WBP_PassiveList_C_AddMissingPassives::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_AddMissingPassives, CallFunc_Array_Get_Item) == 0x000020, "Member 'WBP_PassiveList_C_AddMissingPassives::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_AddMissingPassives, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'WBP_PassiveList_C_AddMissingPassives::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_AddMissingPassives, CallFunc_Array_Add_ReturnValue) == 0x00002C, "Member 'WBP_PassiveList_C_AddMissingPassives::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_PassiveList_C_AddMissingPassives, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'WBP_PassiveList_C_AddMissingPassives::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

