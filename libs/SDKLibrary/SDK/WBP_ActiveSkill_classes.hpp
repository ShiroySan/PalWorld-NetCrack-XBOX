#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ActiveSkill

#include "Basic.hpp"

#include "Pal_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ActiveSkill.WBP_ActiveSkill_C
// 0x00C0 (0x0338 - 0x0278)
class UWBP_ActiveSkill_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0278(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             ActiveSkillNameText;                               // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Border;                                            // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_241;                                        // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DamageText;                                        // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ElementBG;                                         // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ElementContainer;                                  // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               FocusFrame;                                        // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_1;                                           // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_2;                                           // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_3;                                           // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_49;                                          // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnClicked;                                         // 0x02E0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FName                                   ID;                                                // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnRightClick;                                      // 0x02F8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnHovered;                                         // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnUnhovered;                                       // 0x0318(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	EPalElementType                               Element;                                           // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15CF[0x3];                                     // 0x0329(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Damage;                                            // 0x032C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CoolTime;                                          // 0x0330(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPalWazaID                                    WazaID;                                            // 0x0334(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void BndEvt__WBP_PassiveSkill_Button_241_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__WBP_PassiveSkill_Button_241_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void SetEmpty(bool IsEmpty);
	void SetData(EPalWazaID Param_WazaID);
	void PrintToModLoader(const class FString& Message);
	void OnUnhovered__DelegateSignature();
	void OnRightClick__DelegateSignature(class UWBP_ActiveSkill_C* Button);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnHovered__DelegateSignature(EPalWazaID Param_ID);
	void OnClicked__DelegateSignature(class UWBP_ActiveSkill_C* Button, EPalWazaID Param_ID);
	void GetElementIcon(EPalElementType Param_Element, TSoftObjectPtr<class UTexture2D>* Icon);
	void ExecuteUbergraph_WBP_ActiveSkill(int32 EntryPoint);
	void Construct();
	void BndEvt__WBP_PassiveSkill_Button_241_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ActiveSkill_C">();
	}
	static class UWBP_ActiveSkill_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ActiveSkill_C>();
	}
};
static_assert(alignof(UWBP_ActiveSkill_C) == 0x000008, "Wrong alignment on UWBP_ActiveSkill_C");
static_assert(sizeof(UWBP_ActiveSkill_C) == 0x000338, "Wrong size on UWBP_ActiveSkill_C");
static_assert(offsetof(UWBP_ActiveSkill_C, UberGraphFrame) == 0x000278, "Member 'UWBP_ActiveSkill_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ActiveSkill_C, ActiveSkillNameText) == 0x000280, "Member 'UWBP_ActiveSkill_C::ActiveSkillNameText' has a wrong offset!");
static_assert(offsetof(UWBP_ActiveSkill_C, Border) == 0x000288, "Member 'UWBP_ActiveSkill_C::Border' has a wrong offset!");
static_assert(offsetof(UWBP_ActiveSkill_C, Button_241) == 0x000290, "Member 'UWBP_ActiveSkill_C::Button_241' has a wrong offset!");
static_assert(offsetof(UWBP_ActiveSkill_C, DamageText) == 0x000298, "Member 'UWBP_ActiveSkill_C::DamageText' has a wrong offset!");
static_assert(offsetof(UWBP_ActiveSkill_C, ElementBG) == 0x0002A0, "Member 'UWBP_ActiveSkill_C::ElementBG' has a wrong offset!");
static_assert(offsetof(UWBP_ActiveSkill_C, ElementContainer) == 0x0002A8, "Member 'UWBP_ActiveSkill_C::ElementContainer' has a wrong offset!");
static_assert(offsetof(UWBP_ActiveSkill_C, FocusFrame) == 0x0002B0, "Member 'UWBP_ActiveSkill_C::FocusFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ActiveSkill_C, Image) == 0x0002B8, "Member 'UWBP_ActiveSkill_C::Image' has a wrong offset!");
static_assert(offsetof(UWBP_ActiveSkill_C, Image_1) == 0x0002C0, "Member 'UWBP_ActiveSkill_C::Image_1' has a wrong offset!");
static_assert(offsetof(UWBP_ActiveSkill_C, Image_2) == 0x0002C8, "Member 'UWBP_ActiveSkill_C::Image_2' has a wrong offset!");
static_assert(offsetof(UWBP_ActiveSkill_C, Image_3) == 0x0002D0, "Member 'UWBP_ActiveSkill_C::Image_3' has a wrong offset!");
static_assert(offsetof(UWBP_ActiveSkill_C, Image_49) == 0x0002D8, "Member 'UWBP_ActiveSkill_C::Image_49' has a wrong offset!");
static_assert(offsetof(UWBP_ActiveSkill_C, OnClicked) == 0x0002E0, "Member 'UWBP_ActiveSkill_C::OnClicked' has a wrong offset!");
static_assert(offsetof(UWBP_ActiveSkill_C, ID) == 0x0002F0, "Member 'UWBP_ActiveSkill_C::ID' has a wrong offset!");
static_assert(offsetof(UWBP_ActiveSkill_C, OnRightClick) == 0x0002F8, "Member 'UWBP_ActiveSkill_C::OnRightClick' has a wrong offset!");
static_assert(offsetof(UWBP_ActiveSkill_C, OnHovered) == 0x000308, "Member 'UWBP_ActiveSkill_C::OnHovered' has a wrong offset!");
static_assert(offsetof(UWBP_ActiveSkill_C, OnUnhovered) == 0x000318, "Member 'UWBP_ActiveSkill_C::OnUnhovered' has a wrong offset!");
static_assert(offsetof(UWBP_ActiveSkill_C, Element) == 0x000328, "Member 'UWBP_ActiveSkill_C::Element' has a wrong offset!");
static_assert(offsetof(UWBP_ActiveSkill_C, Damage) == 0x00032C, "Member 'UWBP_ActiveSkill_C::Damage' has a wrong offset!");
static_assert(offsetof(UWBP_ActiveSkill_C, CoolTime) == 0x000330, "Member 'UWBP_ActiveSkill_C::CoolTime' has a wrong offset!");
static_assert(offsetof(UWBP_ActiveSkill_C, WazaID) == 0x000334, "Member 'UWBP_ActiveSkill_C::WazaID' has a wrong offset!");

}

