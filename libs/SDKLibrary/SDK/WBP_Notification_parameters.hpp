#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Notification

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_Notification.WBP_Notification_C.ShowNotification
// 0x0058 (0x0058 - 0x0000)
struct WBP_Notification_C_ShowNotification final
{
public:
	class FText                                   Message;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	double                                        Duration;                                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0040(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Notification_C_ShowNotification) == 0x000008, "Wrong alignment on WBP_Notification_C_ShowNotification");
static_assert(sizeof(WBP_Notification_C_ShowNotification) == 0x000058, "Wrong size on WBP_Notification_C_ShowNotification");
static_assert(offsetof(WBP_Notification_C_ShowNotification, Message) == 0x000000, "Member 'WBP_Notification_C_ShowNotification::Message' has a wrong offset!");
static_assert(offsetof(WBP_Notification_C_ShowNotification, Duration) == 0x000018, "Member 'WBP_Notification_C_ShowNotification::Duration' has a wrong offset!");
static_assert(offsetof(WBP_Notification_C_ShowNotification, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'WBP_Notification_C_ShowNotification::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_Notification_C_ShowNotification, K2Node_CreateDelegate_OutputDelegate_1) == 0x000030, "Member 'WBP_Notification_C_ShowNotification::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_Notification_C_ShowNotification, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000040, "Member 'WBP_Notification_C_ShowNotification::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Notification_C_ShowNotification, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000048, "Member 'WBP_Notification_C_ShowNotification::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Notification_C_ShowNotification, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000050, "Member 'WBP_Notification_C_ShowNotification::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

}

