#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ActiveSkill

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Pal_structs.hpp"


namespace SDK::Params
{

// Function WBP_ActiveSkill.WBP_ActiveSkill_C.SetEmpty
// 0x002C (0x002C - 0x0000)
struct WBP_ActiveSkill_C_SetEmpty final
{
public:
	bool                                          IsEmpty;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15D0[0x3];                                     // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0004(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0018(0x0014)()
};
static_assert(alignof(WBP_ActiveSkill_C_SetEmpty) == 0x000004, "Wrong alignment on WBP_ActiveSkill_C_SetEmpty");
static_assert(sizeof(WBP_ActiveSkill_C_SetEmpty) == 0x00002C, "Wrong size on WBP_ActiveSkill_C_SetEmpty");
static_assert(offsetof(WBP_ActiveSkill_C_SetEmpty, IsEmpty) == 0x000000, "Member 'WBP_ActiveSkill_C_SetEmpty::IsEmpty' has a wrong offset!");
static_assert(offsetof(WBP_ActiveSkill_C_SetEmpty, K2Node_MakeStruct_SlateColor) == 0x000004, "Member 'WBP_ActiveSkill_C_SetEmpty::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_ActiveSkill_C_SetEmpty, K2Node_MakeStruct_SlateColor_1) == 0x000018, "Member 'WBP_ActiveSkill_C_SetEmpty::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

// Function WBP_ActiveSkill.WBP_ActiveSkill_C.SetData
// 0x00C8 (0x00C8 - 0x0000)
struct WBP_ActiveSkill_C_SetData final
{
public:
	EPalWazaID                                    Param_WazaID;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15D1[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetWazaName_outName;                      // 0x0008(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
	class UPalWazaDatabase*                       CallFunc_GetWazaDatabase_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_GetElementIcon_Icon;                      // 0x0040(0x0030)(HasGetValueTypeHash)
	struct FPalWazaDatabaseRaw                    CallFunc_FindWazaForBP_OutData;                    // 0x0070(0x0050)()
	bool                                          CallFunc_FindWazaForBP_ReturnValue;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActiveSkill_C_SetData) == 0x000008, "Wrong alignment on WBP_ActiveSkill_C_SetData");
static_assert(sizeof(WBP_ActiveSkill_C_SetData) == 0x0000C8, "Wrong size on WBP_ActiveSkill_C_SetData");
static_assert(offsetof(WBP_ActiveSkill_C_SetData, Param_WazaID) == 0x000000, "Member 'WBP_ActiveSkill_C_SetData::Param_WazaID' has a wrong offset!");
static_assert(offsetof(WBP_ActiveSkill_C_SetData, CallFunc_GetWazaName_outName) == 0x000008, "Member 'WBP_ActiveSkill_C_SetData::CallFunc_GetWazaName_outName' has a wrong offset!");
static_assert(offsetof(WBP_ActiveSkill_C_SetData, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'WBP_ActiveSkill_C_SetData::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveSkill_C_SetData, CallFunc_GetWazaDatabase_ReturnValue) == 0x000038, "Member 'WBP_ActiveSkill_C_SetData::CallFunc_GetWazaDatabase_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveSkill_C_SetData, CallFunc_GetElementIcon_Icon) == 0x000040, "Member 'WBP_ActiveSkill_C_SetData::CallFunc_GetElementIcon_Icon' has a wrong offset!");
static_assert(offsetof(WBP_ActiveSkill_C_SetData, CallFunc_FindWazaForBP_OutData) == 0x000070, "Member 'WBP_ActiveSkill_C_SetData::CallFunc_FindWazaForBP_OutData' has a wrong offset!");
static_assert(offsetof(WBP_ActiveSkill_C_SetData, CallFunc_FindWazaForBP_ReturnValue) == 0x0000C0, "Member 'WBP_ActiveSkill_C_SetData::CallFunc_FindWazaForBP_ReturnValue' has a wrong offset!");

// Function WBP_ActiveSkill.WBP_ActiveSkill_C.PrintToModLoader
// 0x0010 (0x0010 - 0x0000)
struct WBP_ActiveSkill_C_PrintToModLoader final
{
public:
	class FString                                 Message;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActiveSkill_C_PrintToModLoader) == 0x000008, "Wrong alignment on WBP_ActiveSkill_C_PrintToModLoader");
static_assert(sizeof(WBP_ActiveSkill_C_PrintToModLoader) == 0x000010, "Wrong size on WBP_ActiveSkill_C_PrintToModLoader");
static_assert(offsetof(WBP_ActiveSkill_C_PrintToModLoader, Message) == 0x000000, "Member 'WBP_ActiveSkill_C_PrintToModLoader::Message' has a wrong offset!");

// Function WBP_ActiveSkill.WBP_ActiveSkill_C.OnRightClick__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_ActiveSkill_C_OnRightClick__DelegateSignature final
{
public:
	class UWBP_ActiveSkill_C*                     Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActiveSkill_C_OnRightClick__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ActiveSkill_C_OnRightClick__DelegateSignature");
static_assert(sizeof(WBP_ActiveSkill_C_OnRightClick__DelegateSignature) == 0x000008, "Wrong size on WBP_ActiveSkill_C_OnRightClick__DelegateSignature");
static_assert(offsetof(WBP_ActiveSkill_C_OnRightClick__DelegateSignature, Button) == 0x000000, "Member 'WBP_ActiveSkill_C_OnRightClick__DelegateSignature::Button' has a wrong offset!");

// Function WBP_ActiveSkill.WBP_ActiveSkill_C.OnMouseButtonDown
// 0x0250 (0x0250 - 0x0000)
struct WBP_ActiveSkill_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0040(0x0098)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00D8(0x00B8)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue; // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15D2[0x7];                                     // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0198(0x00B8)()
};
static_assert(alignof(WBP_ActiveSkill_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on WBP_ActiveSkill_C_OnMouseButtonDown");
static_assert(sizeof(WBP_ActiveSkill_C_OnMouseButtonDown) == 0x000250, "Wrong size on WBP_ActiveSkill_C_OnMouseButtonDown");
static_assert(offsetof(WBP_ActiveSkill_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'WBP_ActiveSkill_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_ActiveSkill_C_OnMouseButtonDown, MouseEvent) == 0x000040, "Member 'WBP_ActiveSkill_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_ActiveSkill_C_OnMouseButtonDown, ReturnValue) == 0x0000D8, "Member 'WBP_ActiveSkill_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveSkill_C_OnMouseButtonDown, CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue) == 0x000190, "Member 'WBP_ActiveSkill_C_OnMouseButtonDown::CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_ActiveSkill_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000198, "Member 'WBP_ActiveSkill_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function WBP_ActiveSkill.WBP_ActiveSkill_C.OnHovered__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct WBP_ActiveSkill_C_OnHovered__DelegateSignature final
{
public:
	EPalWazaID                                    Param_ID;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActiveSkill_C_OnHovered__DelegateSignature) == 0x000001, "Wrong alignment on WBP_ActiveSkill_C_OnHovered__DelegateSignature");
static_assert(sizeof(WBP_ActiveSkill_C_OnHovered__DelegateSignature) == 0x000001, "Wrong size on WBP_ActiveSkill_C_OnHovered__DelegateSignature");
static_assert(offsetof(WBP_ActiveSkill_C_OnHovered__DelegateSignature, Param_ID) == 0x000000, "Member 'WBP_ActiveSkill_C_OnHovered__DelegateSignature::Param_ID' has a wrong offset!");

// Function WBP_ActiveSkill.WBP_ActiveSkill_C.OnClicked__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct WBP_ActiveSkill_C_OnClicked__DelegateSignature final
{
public:
	class UWBP_ActiveSkill_C*                     Button;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EPalWazaID                                    Param_ID;                                          // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActiveSkill_C_OnClicked__DelegateSignature) == 0x000008, "Wrong alignment on WBP_ActiveSkill_C_OnClicked__DelegateSignature");
static_assert(sizeof(WBP_ActiveSkill_C_OnClicked__DelegateSignature) == 0x000010, "Wrong size on WBP_ActiveSkill_C_OnClicked__DelegateSignature");
static_assert(offsetof(WBP_ActiveSkill_C_OnClicked__DelegateSignature, Button) == 0x000000, "Member 'WBP_ActiveSkill_C_OnClicked__DelegateSignature::Button' has a wrong offset!");
static_assert(offsetof(WBP_ActiveSkill_C_OnClicked__DelegateSignature, Param_ID) == 0x000008, "Member 'WBP_ActiveSkill_C_OnClicked__DelegateSignature::Param_ID' has a wrong offset!");

// Function WBP_ActiveSkill.WBP_ActiveSkill_C.GetElementIcon
// 0x0250 (0x0250 - 0x0000)
struct WBP_ActiveSkill_C_GetElementIcon final
{
public:
	EPalElementType                               Param_Element;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15D3[0x7];                                     // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              Icon;                                              // 0x0008(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	EPalElementType                               Temp_byte_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15D4[0x7];                                     // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable;                          // 0x0040(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_1;                        // 0x0070(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_2;                        // 0x00A0(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_3;                        // 0x00D0(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_4;                        // 0x0100(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_5;                        // 0x0130(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_6;                        // 0x0160(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_7;                        // 0x0190(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_8;                        // 0x01C0(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_9;                        // 0x01F0(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default;                             // 0x0220(0x0030)(HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActiveSkill_C_GetElementIcon) == 0x000008, "Wrong alignment on WBP_ActiveSkill_C_GetElementIcon");
static_assert(sizeof(WBP_ActiveSkill_C_GetElementIcon) == 0x000250, "Wrong size on WBP_ActiveSkill_C_GetElementIcon");
static_assert(offsetof(WBP_ActiveSkill_C_GetElementIcon, Param_Element) == 0x000000, "Member 'WBP_ActiveSkill_C_GetElementIcon::Param_Element' has a wrong offset!");
static_assert(offsetof(WBP_ActiveSkill_C_GetElementIcon, Icon) == 0x000008, "Member 'WBP_ActiveSkill_C_GetElementIcon::Icon' has a wrong offset!");
static_assert(offsetof(WBP_ActiveSkill_C_GetElementIcon, Temp_byte_Variable) == 0x000038, "Member 'WBP_ActiveSkill_C_GetElementIcon::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActiveSkill_C_GetElementIcon, Temp_softobject_Variable) == 0x000040, "Member 'WBP_ActiveSkill_C_GetElementIcon::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(WBP_ActiveSkill_C_GetElementIcon, Temp_softobject_Variable_1) == 0x000070, "Member 'WBP_ActiveSkill_C_GetElementIcon::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_ActiveSkill_C_GetElementIcon, Temp_softobject_Variable_2) == 0x0000A0, "Member 'WBP_ActiveSkill_C_GetElementIcon::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_ActiveSkill_C_GetElementIcon, Temp_softobject_Variable_3) == 0x0000D0, "Member 'WBP_ActiveSkill_C_GetElementIcon::Temp_softobject_Variable_3' has a wrong offset!");
static_assert(offsetof(WBP_ActiveSkill_C_GetElementIcon, Temp_softobject_Variable_4) == 0x000100, "Member 'WBP_ActiveSkill_C_GetElementIcon::Temp_softobject_Variable_4' has a wrong offset!");
static_assert(offsetof(WBP_ActiveSkill_C_GetElementIcon, Temp_softobject_Variable_5) == 0x000130, "Member 'WBP_ActiveSkill_C_GetElementIcon::Temp_softobject_Variable_5' has a wrong offset!");
static_assert(offsetof(WBP_ActiveSkill_C_GetElementIcon, Temp_softobject_Variable_6) == 0x000160, "Member 'WBP_ActiveSkill_C_GetElementIcon::Temp_softobject_Variable_6' has a wrong offset!");
static_assert(offsetof(WBP_ActiveSkill_C_GetElementIcon, Temp_softobject_Variable_7) == 0x000190, "Member 'WBP_ActiveSkill_C_GetElementIcon::Temp_softobject_Variable_7' has a wrong offset!");
static_assert(offsetof(WBP_ActiveSkill_C_GetElementIcon, Temp_softobject_Variable_8) == 0x0001C0, "Member 'WBP_ActiveSkill_C_GetElementIcon::Temp_softobject_Variable_8' has a wrong offset!");
static_assert(offsetof(WBP_ActiveSkill_C_GetElementIcon, Temp_softobject_Variable_9) == 0x0001F0, "Member 'WBP_ActiveSkill_C_GetElementIcon::Temp_softobject_Variable_9' has a wrong offset!");
static_assert(offsetof(WBP_ActiveSkill_C_GetElementIcon, K2Node_Select_Default) == 0x000220, "Member 'WBP_ActiveSkill_C_GetElementIcon::K2Node_Select_Default' has a wrong offset!");

// Function WBP_ActiveSkill.WBP_ActiveSkill_C.ExecuteUbergraph_WBP_ActiveSkill
// 0x0040 (0x0040 - 0x0000)
struct WBP_ActiveSkill_C_ExecuteUbergraph_WBP_ActiveSkill final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0004(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0018(0x0014)()
	uint8                                         Pad_15D5[0x4];                                     // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_Message;                        // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_ActiveSkill_C_ExecuteUbergraph_WBP_ActiveSkill) == 0x000008, "Wrong alignment on WBP_ActiveSkill_C_ExecuteUbergraph_WBP_ActiveSkill");
static_assert(sizeof(WBP_ActiveSkill_C_ExecuteUbergraph_WBP_ActiveSkill) == 0x000040, "Wrong size on WBP_ActiveSkill_C_ExecuteUbergraph_WBP_ActiveSkill");
static_assert(offsetof(WBP_ActiveSkill_C_ExecuteUbergraph_WBP_ActiveSkill, EntryPoint) == 0x000000, "Member 'WBP_ActiveSkill_C_ExecuteUbergraph_WBP_ActiveSkill::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_ActiveSkill_C_ExecuteUbergraph_WBP_ActiveSkill, K2Node_MakeStruct_SlateColor) == 0x000004, "Member 'WBP_ActiveSkill_C_ExecuteUbergraph_WBP_ActiveSkill::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(WBP_ActiveSkill_C_ExecuteUbergraph_WBP_ActiveSkill, K2Node_MakeStruct_SlateColor_1) == 0x000018, "Member 'WBP_ActiveSkill_C_ExecuteUbergraph_WBP_ActiveSkill::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(WBP_ActiveSkill_C_ExecuteUbergraph_WBP_ActiveSkill, K2Node_CustomEvent_Message) == 0x000030, "Member 'WBP_ActiveSkill_C_ExecuteUbergraph_WBP_ActiveSkill::K2Node_CustomEvent_Message' has a wrong offset!");

}

